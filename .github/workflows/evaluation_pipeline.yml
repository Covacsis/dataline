name: Evaluate LLM Workflow and Post Comment

on:
  push:

jobs:
  evaluation-pipeline:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.6
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install --with dev --no-interaction --no-root
      - name: Run eval pipeline test cases
        env:
          DATA_DIRECTORY: ./
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: PYTHONPATH=. poetry run pytest tests/evaluation/test_query_flow.py --run-expensive
      - name: Run score aggregation script
        run: python tests/evaluation/aggregate_scores.py
      - name: Generate markdown comment
        id: markdown
        run: |
          markdown=$(cat scores.md)
          echo "::set-output name=markdown::$markdown"
      - name: Post comment on PR
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: ${{ steps.markdown.outputs.markdown }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

